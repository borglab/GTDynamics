name: macOS CI

on: [pull_request]

jobs:
  build:
    name: ${{ matrix.name }} ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}

    env:
      CTEST_OUTPUT_ON_FAILURE: ON
      CTEST_PARALLEL_LEVEL: 2
      CMAKE_BUILD_TYPE: ${{ matrix.build_type }}
      GTSAM_BUILD_UNSTABLE: ${{ matrix.build_unstable }}
    strategy:
      fail-fast: false
      matrix:
        # Github Actions requires a single row to be added to the build matrix.
        # See https://help.github.com/en/articles/workflow-syntax-for-github-actions.
        name: [macOS-10.15-xcode-11.3.1]

        build_type: [Debug, Release]
        build_unstable: [ON]
        include:
          - name: macOS-10.15-xcode-11.3.1
            os: macOS-10.15
            compiler: xcode
            version: "11.3.1"

    steps:
      - name: Setup Compiler
        run: |
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            brew install gcc@${{ matrix.version }}
            echo "CC=gcc-${{ matrix.version }}" >> $GITHUB_ENV
            echo "CXX=g++-${{ matrix.version }}" >> $GITHUB_ENV
          else
            sudo xcode-select -switch /Applications/Xcode_${{ matrix.version }}.app
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi

      - name: Dependencies
        run: |
          brew install boost
          brew tap osrf/simulation
          brew install sdformat10

      - name: GTSAM
        run: |
          git clone https://github.com/borglab/gtsam.git
          cd gtsam
          mkdir build && cd build
          cmake -D GTSAM_BUILD_EXAMPLES_ALWAYS=OFF ..
          make -j$(sysctl -n hw.physicalcpu) install
          cd ../../ # go back to home directory

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Directory
        run: mkdir ./build

      - name: Configure
        run: |
          cmake -DGTDYNAMICS_BUILD_PYTHON=OFF -DGTDYNAMICS_BUILD_CABLE_ROBOT=ON -DGTDYNAMICS_BUILD_JUMPING_ROBOT=ON ..
        working-directory: ./build

      - name: Build
        run: make -j$(sysctl -n hw.physicalcpu)
        working-directory: ./build

      - name: Test
        run: make -j$(sysctl -n hw.physicalcpu) check
        working-directory: ./build
